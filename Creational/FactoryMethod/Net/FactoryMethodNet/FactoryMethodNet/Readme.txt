В качестве абстрактного класса Product здесь выступает класс House.

 Его две конкретные реализации - PanelHouse и WoodHouse представляют типы домов, которые будут строить подрядчики.
 
  В качестве абстрактного класса создателя выступает Developer, определяющий абстрактный метод Create().
  Этот метод реализуется в классах-наследниках WoodDeveloper и PanelDeveloper. И если в будущем нам
  потребуется построить дома какого-то другого типа, например, кирпичные, то мы можем с легкостью создать 
  новый класс кирпичных домов, унаследованный от House, и определить класс соответствующего подрядчика.
  Таким образом, система получится легко расширяемой. Правда, недостатки паттерна тоже очевидны - для каждого
  нового продукта необходимо создавать свой класс создателя.