Здесь наблюдаемый объект представлен интерфейсом IObservable, а наблюдатель - интерфейсом IObserver. 
Реализацией интерфейса IObservable является класс Stock, который символизирует валютную биржу. В этом
классе определен метод Market(), который имитирует торги и инкапсулирует всю информацию о валютных 
курсах в объекте StockInfo. После проведения торгов производится уведомление всех наблюдателей.

Реализациями интерфейса IObserver являются классы Broker, представляющий брокера, и Bank, представляющий банк. 
При этом метод Update() интерфейса IObserver принимает в качестве параметра некоторый объект. Реализация 
этого метода подразумевает получение через данный параметр объекта StockInfo с текущей информацией о торгах
и произведение некоторых действий: покупка или продажа долларов и евро. Дело в том, что часто необходимо
информировать наблюдателя об изменении состояния наблюдаемого объекта. В данном случае состояние заключено
в объекте StockInfo. И одним из вариантом информирования наблюдателя о состоянии является push-модель,
при которой наблюдаемый объект передает (иначе говоря толкает - push) данные о своем состоянии, то есть 
передаем в виде параметра метода Update().

Альтернативой push-модели является pull-модель, когда наблюдатель вытягивает (pull) из наблюдаемого объекта 
данные о состоянии с помощью дополнительных методов.

Также в классе брокера определен дополнительный метод StopTrade(), с помощью которого брокер может отписаться 
от уведомлений биржи и перестать быть наблюдателем.